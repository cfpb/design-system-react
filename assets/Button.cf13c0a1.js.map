{"version":3,"file":"Button.cf13c0a1.js","sources":["../../src/components/Button.tsx"],"sourcesContent":["interface ButtonProperties {\n  /**\n   * Button contents\n   */\n  label: string;\n  /**\n   * What is the button's appearance?\n   */\n  appearance?: 'primary' | 'secondary' | 'warning';\n  /**\n   * How large should the button be?\n   */\n  size?: 'default' | 'full' | 'super';\n  /**\n   * Disable the button?\n   */\n  isDisabled?: boolean;\n  /**\n   * Optional click handler\n   */\n  onClick?: () => void;\n}\n\nconst baseStyles = ['a-btn'];\n\nconst appearanceStyles = {\n  primary: [],\n  secondary: ['a-btn__secondary'],\n  warning: ['a-btn__warning']\n};\n\nconst sizeStyles = {\n  default: [],\n  super: ['a-btn__super'],\n  full: ['a-btn__full-on-xs']\n};\n\n/**\n * Primary UI component for user interaction\n */\nexport function Button({\n  appearance = 'primary',\n  size = 'default',\n  isDisabled = false,\n  label,\n  ...properties\n}: ButtonProperties): JSX.Element {\n  const styles = [\n    ...baseStyles,\n    ...appearanceStyles[appearance],\n    ...sizeStyles[size]\n  ];\n  return (\n    <button\n      type='button'\n      className={[...styles].join(' ')}\n      disabled={isDisabled}\n      {...properties}\n    >\n      {label}\n    </button>\n  );\n}\n"],"names":["baseStyles","appearanceStyles","sizeStyles","Button","appearance","size","isDisabled","label","styles","_jsx","properties","__name"],"mappings":"6HAuBA,MAAAA,EAAA,CAAA,OAAA,EAEAC,EAAA,CAAyB,QAAA,CAAA,EACZ,UAAA,CAAA,kBAAA,EACmB,QAAA,CAAA,gBAAA,CAEhC,EAEAC,EAAA,CAAmB,QAAA,CAAA,EACN,MAAA,CAAA,cAAA,EACW,KAAA,CAAA,mBAAA,CAExB,EAKO,SAAAC,EAAA,CAAgB,WAAAC,EAAA,UACR,KAAAC,EAAA,UACN,WAAAC,EAAA,GACM,MAAAC,KACbA,CAEgB,EAAA,CAChB,MAAAC,EAAA,CAAA,GAAAR,EAAA,GAAAC,EAAAG,GAAA,GAAAF,EAAAG,EAAA,EAKA,OAAAI,EAAA,SAAA,CACE,KAAA,SACO,UAAA,CAAA,GAAAD,CAAA,EAAA,KAAA,GAAA,EAC0B,SAAAF,EACrBA,GAAAA,EACNI,SAAAA,CAEHH,CAAAA,CAGP,CAtBOI,EAAAR,EAAA"}