import{c as n}from"./index.cfa9e344.js";import{a as d,j as u,r as V}from"./jsx-runtime.54133100.js";const p=({children:e,className:a,...l})=>e?d("small",{className:n(["a-label_helper",a]),...l,children:["(",e,")"]}):null;try{p.displayName="HelperText",p.__docgenInfo={description:"A utility component to consistently display helper text for input elements",displayName:"HelperText",props:{}}}catch{}const C=["a-label"],m=({children:e,inline:a=!1,htmlFor:l,className:t,...r})=>{const c=[...[...C,a?"":"a-label__heading"],t];return e?u("label",{...r,className:n(c),htmlFor:l,children:e}):null};try{m.displayName="Label",m.__docgenInfo={description:"",displayName:"Label",props:{inline:{defaultValue:{value:"false"},description:"",name:"inline",required:!1,type:{name:"boolean"}}}}}catch{}const L=["m-form-field m-form-field__checkbox"],I={success:"m-form-field__checkbox__success",warning:"m-form-field__checkbox__warning",error:"m-form-field__checkbox__error"},b=({id:e,label:a,className:l,inputClassName:t,labelClassName:r,checked:i=!1,helperText:c,inputRef:h,disabled:_=!1,isLarge:y=!1,labelInline:x=!0,name:o,onChange:s,status:g,...k})=>{var f;const v=V.exports.useCallback(q=>{s==null||s(q)},[s]),N=[...L,y?"m-form-field__lg-target":"",(f=I[g])!=null?f:"",l];return d("div",{className:n(N),...k,children:[u("input",{id:e,type:"checkbox",checked:i,"aria-checked":i,"aria-labelledby":`${e}-label`,name:o!=null?o:e,className:n(["a-checkbox",t]),ref:h,disabled:_,onChange:v}),d(m,{id:`${e}-label`,className:r,htmlFor:e,inline:x,children:[a,u(p,{children:c})]})]})};try{b.displayName="Checkbox",b.__docgenInfo={description:"",displayName:"Checkbox",props:{id:{defaultValue:null,description:"Unique identifier for this checkbox",name:"id",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Text that appears next to the checkbox for clarification of purpose",name:"label",required:!0,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Additional CSS classes applied to the checkbox's wrapper element",name:"className",required:!1,type:{name:"string"}},checked:{defaultValue:{value:"false"},description:"Is checkboxed checked?",name:"checked",required:!1,type:{name:"boolean"}},helperText:{defaultValue:null,description:"Additional text to further clarify purpose of checkbox",name:"helperText",required:!1,type:{name:"ReactNode"}},inputClassName:{defaultValue:null,description:"Additional CSS classes that will be applied to checkbox input element",name:"inputClassName",required:!1,type:{name:"string"}},labelClassName:{defaultValue:null,description:"Additional CSS classes that will be applied to checkbox label element",name:"labelClassName",required:!0,type:{name:"string"}},inputRef:{defaultValue:null,description:"React Ref to be enable direct access and control of the input element",name:"inputRef",required:!1,type:{name:"string | RefObject<HTMLInputElement> | ((instance: HTMLInputElement | null) => void) | null"}},isLarge:{defaultValue:{value:"false"},description:'Apply the "Large" styles for this element?',name:"isLarge",required:!1,type:{name:"boolean"}},labelInline:{defaultValue:{value:"true"},description:"A name for this checkbox's value that can be referenced in javascript",name:"labelInline",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Removes/Adds 'label__heading' class to the Label *",name:"name",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"Is this checkbox disabled?",name:"disabled",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"An event handler function that will be called when the checkbox's value is changed",name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>) => void)"}},status:{defaultValue:null,description:"Border status",name:"status",required:!0,type:{name:"enum",value:[{value:'"warning"'},{value:'"error"'},{value:'"success"'}]}}}}}catch{}export{b as C,p as H,m as L};
//# sourceMappingURL=Checkbox.adabeb2b.js.map
