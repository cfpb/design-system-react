{"version":3,"file":"Checkbox.stories.f2a28b7c.js","sources":["../../src/components/Checkbox.tsx"],"sourcesContent":["import type React from 'react';\nimport { useMemo, useState } from 'react';\n\ninterface CheckboxProperties {\n  id: string;\n  label: string;\n  className?: string;\n  defaultChecked?: boolean;\n  helperText?: string;\n  inputRef?:\n    | React.RefObject<HTMLInputElement>\n    | string\n    | ((instance: HTMLInputElement | null) => void)\n    | null\n    | undefined;\n  isDisabled?: boolean;\n  isLarge?: boolean;\n  name?: string;\n  onChange?: (value: boolean) => void;\n}\nconst baseStyles = ['a-checkbox'];\nconst containerBaseStyles = ['m-form-field m-form-field__checkbox'];\n\nexport const Checkbox = ({\n  id,\n  label,\n  className,\n  defaultChecked = false,\n  helperText,\n  inputRef,\n  isDisabled = false,\n  isLarge = false,\n  name,\n  onChange\n}: CheckboxProperties & JSX.IntrinsicElements['input']): React.ReactElement => {\n  const [checked, setChecked] = useState(defaultChecked);\n\n  const onChangeHandler = useMemo(\n    () =>\n      (event: React.ChangeEvent<HTMLInputElement>): void => {\n        setChecked(event.target.checked);\n        onChange?.(event.target.checked);\n      },\n    [onChange, setChecked]\n  );\n\n  const classes = [...baseStyles, className].join(' ');\n\n  const containerClasses = [\n    ...containerBaseStyles,\n    isLarge ? 'm-form-field__lg-target' : ''\n  ].join(' ');\n\n  return (\n    <div className={containerClasses} data-testid={`${id}-container`}>\n      <input\n        id={id}\n        type='checkbox'\n        checked={checked}\n        aria-checked={checked}\n        aria-labelledby={`${id}-label`}\n        name={name ?? id}\n        className={classes}\n        ref={inputRef}\n        disabled={isDisabled}\n        onChange={onChangeHandler}\n      />\n      <label id={`${id}-label`} className='a-label' htmlFor={id}>\n        {label}\n        {helperText ? (\n          <small className='a-label_helper'>{helperText}</small>\n        ) : undefined}\n      </label>\n    </div>\n  );\n};\n\nexport default Checkbox;\n"],"names":["baseStyles","containerBaseStyles","Checkbox","id","label","className","helperText","inputRef","isLarge","name","checked","setChecked","useState","defaultChecked","onChangeHandler","useMemo","event","onChange","classes","containerClasses","_jsxs","isDisabled"],"mappings":"mGAoBA,MAAAA,EAAA,CAAA,YAAA,EACAC,EAAA,CAAA,qCAAA,EAEOC,EAAA,CAAA,CAAkB,GAAAC,EACvBA,MAAAA,EACAC,UAAAA,EACAC,eAAAA,EAAAA,GACiB,WAAAC,EACjBA,SAAAA,EACAC,WAAAA,EAAAA,GACa,QAAAC,EAAA,GACH,KAAAC,EACVA,SAAAA,CAEmD,IAAA,CACnD,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,QAAA,SAAAC,CAAA,EAEAC,EAAAC,EAAAA,QAAAA,QAAA,IAAAC,GAAA,CAGML,EAAAA,EAAAA,OAAAA,OAAAA,EACAM,GAAAA,MAAAA,EAAAA,EAAAA,OAAAA,QAA+B,EAAA,CAAAA,EAAAN,CAAA,CAAA,EAKrCO,EAAA,CAAA,GAAAlB,EAAAK,CAAA,EAAA,KAAA,GAAA,EAEAc,EAAA,CAAA,GAAAlB,EAAAO,EAAA,0BAAA,EAAA,EAAA,KAAA,GAAA,EAKA,OAAAY,EAAA,MAAA,CACE,UAAAD,EAAgBA,cAAAA,GAAAA,cAAkChB,SAAAA,CAAAA,EAAAA,QAAAA,CAChD,GAAAA,EACEA,KAAAA,WACK,QAAAO,EACLA,eAAAA,EACcA,kBAAAA,GAAAA,UACMP,KAAAA,GAAAA,KAAAA,EAAAA,EACNA,UAAAA,EACHe,IAAAA,EACNX,SAAAA,EACKc,SAAAA,CACAP,CAAAA,EAAAA,EAAAA,QAAAA,CAEZ,GAAA,GAAAX,UAAcA,UAAAA,UAAsB,QAAAA,EAAmBA,SAAAA,CAAAA,EAAAA,EAAAA,EAAAA,QAAAA,CAGnD,UAAA,iBAAiB,SAAAG,CAAkBA,CAAAA,EAAAA,MAAAA,CACxB,CAAA,CAAA,CACP,CAAA,CAGd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}