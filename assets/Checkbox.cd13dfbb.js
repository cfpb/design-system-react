import{c as s}from"./index.cfa9e344.js";import{a as d,j as p,r as q}from"./jsx-runtime.54133100.js";const u=({children:e,className:a,...l})=>e?d("small",{className:s(["a-label_helper",a]),...l,children:["(",e,")"]}):null;try{u.displayName="HelperText",u.__docgenInfo={description:"A utility component to consistently display helper text for input elements",displayName:"HelperText",props:{}}}catch{}const v=["a-label"],m=({children:e,inline:a=!1,htmlFor:l,className:t,...r})=>{const c=[...[...v,a?"":"a-label__heading"],t];return e?p("label",{...r,className:s(c),htmlFor:l,children:e}):null};try{m.displayName="Label",m.__docgenInfo={description:"",displayName:"Label",props:{inline:{defaultValue:{value:"false"},description:"",name:"inline",required:!1,type:{name:"boolean"}}}}}catch{}const V=["m-form-field m-form-field__checkbox"],f=({id:e,label:a,className:l,inputClassName:t,labelClassName:r,checked:i=!1,helperText:c,inputRef:b,disabled:h=!1,isLarge:y=!1,labelInline:_=!0,name:o,onChange:n,...x})=>{const g=q.exports.useCallback(N=>{n==null||n(N)},[n]),k=[...V,y?"m-form-field__lg-target":"",l];return d("div",{className:s(k),...x,children:[p("input",{id:e,type:"checkbox",checked:i,"aria-checked":i,"aria-labelledby":`${e}-label`,name:o!=null?o:e,className:s(["a-checkbox",t]),ref:b,disabled:h,onChange:g}),d(m,{id:`${e}-label`,className:r,htmlFor:e,inline:_,children:[a,p(u,{children:c})]})]})};try{f.displayName="Checkbox",f.__docgenInfo={description:"",displayName:"Checkbox",props:{id:{defaultValue:null,description:"Unique identifier for this checkbox",name:"id",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Text that appears next to the checkbox for clarification of purpose",name:"label",required:!0,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Additional CSS classes applied to the checkbox's wrapper element",name:"className",required:!1,type:{name:"string"}},checked:{defaultValue:{value:"false"},description:"Is checkboxed checked?",name:"checked",required:!1,type:{name:"boolean"}},helperText:{defaultValue:null,description:"Additional text to further clarify purpose of checkbox",name:"helperText",required:!1,type:{name:"ReactNode"}},inputClassName:{defaultValue:null,description:"Additional CSS classes that will be applied to checkbox input element",name:"inputClassName",required:!1,type:{name:"string"}},labelClassName:{defaultValue:null,description:"Additional CSS classes that will be applied to checkbox label element",name:"labelClassName",required:!0,type:{name:"string"}},inputRef:{defaultValue:null,description:"React Ref to be enable direct access and control of the input element",name:"inputRef",required:!1,type:{name:"string | RefObject<HTMLInputElement> | ((instance: HTMLInputElement | null) => void) | null"}},isLarge:{defaultValue:{value:"false"},description:'Apply the "Large" styles for this element?',name:"isLarge",required:!1,type:{name:"boolean"}},labelInline:{defaultValue:{value:"true"},description:"A name for this checkbox's value that can be referenced in javascript",name:"labelInline",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Removes/Adds 'label__heading' class to the Label *",name:"name",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"Is this checkbox disabled?",name:"disabled",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"An event handler function that will be called when the checkbox's value is changed",name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>) => void)"}}}}}catch{}export{f as C,u as H,m as L};
//# sourceMappingURL=Checkbox.cd13dfbb.js.map
