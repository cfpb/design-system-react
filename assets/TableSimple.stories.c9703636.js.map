{"version":3,"file":"TableSimple.stories.c9703636.js","sources":["../../../src/components/TableSimple.tsx"],"sourcesContent":["import { default as classNames, default as classnames } from 'classnames';\n\ninterface TableSimpleColumnProps {\n  header: string;\n  alignRight?: boolean;\n  width?: string | number; // TODO: Make enumerated type - 100 |  90 |  80 |  70 |  60 |  50 |  40 |  30 |  20 |  10 |  75 |  25 |  66 |  33\n}\n\ninterface TableSimpleProps {\n  caption?: string | React.ReactElement;\n  columns: Array<string | TableSimpleColumnProps>;\n  rows: Array<Array<string | React.ReactElement>>;\n  isResponsive?: boolean;\n  isDirectory?: boolean;\n  isScrollableHorizontal?: boolean;\n  isStriped?: boolean;\n}\n\n/**\n * This component captures the non-interactive variations of the\n * CFPB DS Table. For advanced functionality, such as pagination,\n * use the TableComplex component.\n *\n * https://cfpb.github.io/design-system/components/tables\n *\n * @param caption Table description, displayed atop the table\n * @param columns Array of column headers or column configurations\n * @param rows Array of row content\n * @param isResponsive Table layout adapts on mobile screens\n * @param isDirectory https://cfpb.github.io/design-system/components/tables#responsive-stacked-table-with-header-directory-tables\n * @param isScrollableHorizontal Horizontal table overflow will scroll\n * @param isStriped Show background on alternate rows to improve readability\n * @returns ReactElement\n */\nexport const TableSimple = ({\n  caption,\n  columns,\n  rows,\n  isResponsive = false,\n  isDirectory = false,\n  isScrollableHorizontal = false,\n  isStriped = false\n}: TableSimpleProps): React.ReactElement => {\n  const tableCnames = [];\n  if (isResponsive || isDirectory) {\n    tableCnames.push('o-table');\n    tableCnames.push('o-table__stack-on-small');\n  }\n  if (isDirectory) tableCnames.push('o-table__entry-header-on-small');\n  if (isStriped) tableCnames.push('o-table__striped');\n\n  if (isScrollableHorizontal) {\n    return (\n      <div className='o-table-wrapper__scrolling'>\n        <table className={classNames(tableCnames)}>\n          {caption && <caption>{caption}</caption>}\n          {buildColumnHeaders(columns)}\n          {buildRows(rows, columns)}\n        </table>\n      </div>\n    );\n  }\n\n  return (\n    <table className={classNames(tableCnames)}>\n      {caption && <caption>{caption}</caption>}\n      {buildColumnHeaders(columns)}\n      {buildRows(rows, columns)}\n    </table>\n  );\n};\n\nconst buildColumnHeaders = (\n  columns: TableSimpleProps['columns']\n): React.ReactNode => {\n  if (!columns) return;\n\n  return (\n    <thead>\n      <tr>\n        {columns.map((column, idx) => {\n          let content = '';\n          let cnames = [''];\n          const key = `header-${idx}`;\n\n          if (typeof column === 'object') {\n            content = column.header;\n\n            if (column.alignRight) cnames.push('o-table_cell__right-align');\n            if (column.width) cnames.push(`u-w${column.width}pct`);\n          } else {\n            content = column;\n          }\n\n          return (\n            <th key={key} className={classnames(cnames)}>\n              {content}\n            </th>\n          );\n        })}\n      </tr>\n    </thead>\n  );\n};\n\nconst buildRows = (\n  rows: TableSimpleProps['rows'],\n  columns: TableSimpleProps['columns']\n) => {\n  if (!rows) return;\n\n  return (\n    <tbody>\n      {rows.map((row, rowIdx) => (\n        <tr key={`row-${rowIdx}`}>\n          {row.map((rowVal, columnIdx) => {\n            const column = columns && columns[columnIdx];\n\n            return (\n              <td\n                {...getCellProps(column)}\n                key={`row-${rowIdx}-col-${columnIdx}`}\n              >\n                {rowVal}\n              </td>\n            );\n          })}\n        </tr>\n      ))}\n    </tbody>\n  );\n};\n\nconst getCellProps = (column: string | TableSimpleColumnProps): object => {\n  if (!column) return {};\n\n  if (typeof column === 'string')\n    return {\n      'data-label': column\n    };\n\n  return {\n    'data-label': column.header,\n    className: column.alignRight ? 'o-table_cell__right-align' : ''\n  };\n};\n\nexport default TableSimple;\n"],"names":["TableSimple","__name","caption","columns","rows","isDirectory","isScrollableHorizontal","isStriped","tableCnames","isResponsive","_jsx","_jsxs","classNames","buildColumnHeaders","column","idx","content","cnames","key","classnames","buildRows","row","rowIdx","rowVal","columnIdx","_createElement","getCellProps","header"],"mappings":"uNAkCO,MAAAA,EAAAC,EAAA,CAAA,CAAqB,QAAAC,EAC1BA,QAAAA,EACAC,KAAAA,EACAC,aAAAA,EAAAA,GACe,YAAAC,EAAA,GACD,uBAAAC,EAAA,GACW,UAAAC,EAAA,EAET,IAAA,CAChB,MAAAC,EAAA,CAAA,EAQA,OAPAC,GAAAJ,KACEG,EAAAA,KAAAA,SAAAA,EACAA,EAAAA,KAAAA,yBAAAA,GAEFH,GAAiBG,EAAAA,KAAAA,gCAAAA,EACjBD,GAAeC,EAAAA,KAAAA,kBAAAA,EAEfF,EACEI,EAAA,MAAA,CACE,UAAA,6BAAe,SAAAC,EAAA,QAAA,CACb,UAAAC,EAAAJ,CAAA,EAAwC,SAAA,CAAAN,GAAAQ,EAAA,UAAA,CAC1B,SAAAR,CAAUA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAAAA,CAAAA,CAEG,CAAA,CAAA,CAAA,EAMjCS,EAAA,QAAA,CACE,UAAAC,EAAAJ,CAAA,EAAwC,SAAA,CAAAN,GAAAQ,EAAA,UAAA,CAC1B,SAAAR,CAAUA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAAAA,CAAAA,CAEG,CAAA,CAG/B,EApCO,eAsCPW,EAAAZ,EAAAE,GAAA,CAGE,GAAA,EAAAA,EAEA,OAAAO,EAAA,QAAA,CACE,SAAAA,EAAA,KAAA,CACE,SAAAP,EAAA,IAAA,CAAAW,EAAAC,IAAA,CAEI,IAAAC,EAAA,GACAC,EAAA,CAAA,EAAA,EACA,MAAAC,EAAA,UAAAH,IAEA,OAAA,OAAAD,GAAA,UACEE,EAAAA,EAAAA,OAEAF,EAAA,YAAuBG,EAAAA,KAAAA,2BAAAA,EACvBH,EAAA,OAAkBG,EAAAA,KAAAA,MAAAA,EAAAA,UAAAA,GAElBD,EAAAA,EAGFN,EAAA,KAAA,CACE,UAAAS,EAAAF,CAAA,EAA0C,SAAAD,CACvCA,EAAAA,CAAAA,CADS,CAAA,CAIf,CAAA,CAAC,CAAA,CAIV,EA/BA,sBAiCAI,EAAAnB,EAAA,CAAAG,EAAAD,IAAA,CAIE,GAAA,EAAAC,EAEA,OAAAM,EAAA,QAAA,CACE,SAAAN,EAAA,IAAA,CAAAiB,EAAAC,IAAAZ,EAAA,KAAA,CAEI,SAAAW,EAAA,IAAA,CAAAE,EAAAC,IAAA,CAEI,MAAAV,EAAAX,GAAAA,EAAAqB,GAEA,OAAAC,EAAAA,QAAAA,cAAA,KAAA,CACE,GAAAC,EAAAZ,CAAA,EACyB,IAAA,OAAAQ,SAAAE,GACGA,EAAAA,CAAAA,CAEnB,CAAA,CAGZ,EAAA,OAAAF,GAAA,CAAA,CAEJ,CAAA,CAGP,EA1BA,aA4BAI,EAAAzB,EAAAa,GACEA,EAEA,OAAAA,GAAA,SACE,CAAO,aAAAA,CACSA,EAGlB,CAAO,aAAAA,EAAA,OACgBa,UAAAA,EAAAA,WAAAA,4BAAAA,EACwC,EATlD,GADf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}