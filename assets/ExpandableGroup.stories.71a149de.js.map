{"version":3,"file":"ExpandableGroup.stories.71a149de.js","sources":["../../../src/components/ExpandableGroup.tsx"],"sourcesContent":["import React from 'react';\nimport { ReactNode, useState } from 'react';\nimport Expandable from './Expandable';\nimport ExtendableProps from './Expandable';\n\ninterface ExpandableProps {\n  accordion?: boolean;\n  children: ReactNode;\n}\n\nconst ExpandableGroup: React.FC<ExpandableProps> = ({\n  accordion = false,\n  children\n}) => {\n  const [activeIndex, setActiveIndex] = useState(null);\n  const childrenWithProps = React.Children.map(children, (child, index) => {\n    if (React.isValidElement(child) && accordian) {\n      return React.cloneElement(child, { index, activeIndex, setActiveIndex });\n    }\n    return child;\n  });\n  return <div className='o-expandable-group'>{childrenWithProps}</div>;\n};\n\nexport default ExpandableGroup;\n"],"names":["ExpandableGroup","__name","accordion","children","activeIndex","setActiveIndex","useState","childrenWithProps","React","child","index","_jsx","ExpandableGroup$1"],"mappings":"uPAUA,MAAAA,EAAAC,EAAA,CAAA,CAAoD,UAAAC,EAAA,GACtC,SAAAC,CAEd,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,QAAA,SAAA,IAAA,EACAC,EAAAC,EAAA,SAAA,IAAAL,EAAA,CAAAM,EAAAC,IACEF,EAAA,eAAAC,CAAA,GAAA,UACED,EAAA,aAAAC,EAAA,CAAiC,MAAAC,EAAEA,YAAAA,EAAON,eAAAA,CAAaC,CAAAA,EAEzDI,CAAOA,EAET,OAAAE,EAAA,MAAA,CAAO,UAAA,qBAAe,SAAAJ,CAAsBA,CAAAA,CAC9C,EAZA,mBAcAK,EAAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}