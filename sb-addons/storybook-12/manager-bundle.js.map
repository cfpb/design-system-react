{
  "version": 3,
  "sources": ["<define:module>", "<define:process.env>", "<define:process.env.NODE_PATH>", "global-externals:@storybook/manager-api", "../../../.storybook/manager.js", "../../../node_modules/.cache/sb-manager/storybook-12/manager-bundle.js"],
  "sourcesContent": ["", "", "", "export default __STORYBOOKAPI__;\nconst { ActiveTabs, Consumer, ManagerContext, Provider, addons, combineParameters, controlOrMetaKey, controlOrMetaSymbol, eventMatchesShortcut, eventToShortcut, isMacLike, isShortcutTaken, keyToSymbol, merge, mockChannel, optionOrAltSymbol, shortcutMatchesShortcut, shortcutToHumanString, types, useAddonState, useArgTypes, useArgs, useChannel, useGlobalTypes, useGlobals, useParameter, useSharedState, useStoryPrepared, useStorybookApi, useStorybookState } = __STORYBOOKAPI__;\nexport { ActiveTabs, Consumer, ManagerContext, Provider, addons, combineParameters, controlOrMetaKey, controlOrMetaSymbol, eventMatchesShortcut, eventToShortcut, isMacLike, isShortcutTaken, keyToSymbol, merge, mockChannel, optionOrAltSymbol, shortcutMatchesShortcut, shortcutToHumanString, types, useAddonState, useArgTypes, useArgs, useChannel, useGlobalTypes, useGlobals, useParameter, useSharedState, useStoryPrepared, useStorybookApi, useStorybookState };", "import { addons } from '@storybook/manager-api';\n\naddons.setConfig({\n  sidebar: {\n    renderLabel: ({ name, type }) => {\n      if (type === 'story') {\n        // Sentence case\n        let newName = name.toLowerCase();\n        newName = newName[0].toUpperCase() + newName.substr(1);\n        return newName;\n      }\n      return name;\n    }\n  }\n});\n", "import '/home/runner/work/design-system-react/design-system-react/.storybook/manager.js';"],
  "mappings": ";4iBAAA,IAAAA,EAAAC,EAAA,QCAA,IAAAC,EAAAC,EAAA,QCAA,IAAAC,EAAAC,EAAA,QCAA,IAAOC,EACCC,EAAYC,EAAUC,EAAgBC,EAAUC,EAAQC,EAAmBC,EAAkBC,EAAqBC,EAAsBC,EAAiBC,EAAWC,EAAiBC,EAAaC,EAAOC,EAAaC,EAAmBC,EAAyBC,EAAuBC,EAAOC,EAAeC,EAAaC,EAASC,EAAYC,GAAgBC,GAAYC,GAAcC,GAAgBC,GAAkBC,GAAiBC,GADtbC,EAAAC,EAAA,KAAAC,IAAAC,IAAAC,IAAOnC,EAAQ,iBACT,CAAE,WAAAC,EAAY,SAAAC,EAAU,eAAAC,EAAgB,SAAAC,EAAU,OAAAC,EAAQ,kBAAAC,EAAmB,iBAAAC,EAAkB,oBAAAC,EAAqB,qBAAAC,EAAsB,gBAAAC,EAAiB,UAAAC,EAAW,gBAAAC,EAAiB,YAAAC,EAAa,MAAAC,EAAO,YAAAC,EAAa,kBAAAC,EAAmB,wBAAAC,EAAyB,sBAAAC,EAAuB,MAAAC,EAAO,cAAAC,EAAe,YAAAC,EAAa,QAAAC,EAAS,WAAAC,EAAY,eAAAC,GAAgB,WAAAC,GAAY,aAAAC,GAAc,eAAAC,GAAgB,iBAAAC,GAAkB,gBAAAC,GAAiB,kBAAAC,IAAsB,mBCD5c,IAAAM,EAAAC,EAAA,KAAAC,IAAAC,IAAAC,IAAAC,IAEAC,EAAO,UAAU,CACf,QAAS,CACP,YAAa,CAAC,CAAE,KAAAC,EAAM,KAAAC,CAAK,IAAM,CAC/B,GAAIA,IAAS,QAAS,CAEpB,IAAIC,EAAUF,EAAK,YAAY,EAC/B,OAAAE,EAAUA,EAAQ,CAAC,EAAE,YAAY,EAAIA,EAAQ,OAAO,CAAC,EAC9CA,CACT,CACA,OAAOF,CACT,CACF,CACF,CAAC,ICdDG,IAAAC,IAAAC,IAAA,IAAAC,GAAO",
  "names": ["init_define_module", "__esmMin", "init_define_process_env", "__esmMin", "init_define_process_env_NODE_PATH", "__esmMin", "manager_api_default", "ActiveTabs", "Consumer", "ManagerContext", "Provider", "addons", "combineParameters", "controlOrMetaKey", "controlOrMetaSymbol", "eventMatchesShortcut", "eventToShortcut", "isMacLike", "isShortcutTaken", "keyToSymbol", "merge", "mockChannel", "optionOrAltSymbol", "shortcutMatchesShortcut", "shortcutToHumanString", "types", "useAddonState", "useArgTypes", "useArgs", "useChannel", "useGlobalTypes", "useGlobals", "useParameter", "useSharedState", "useStoryPrepared", "useStorybookApi", "useStorybookState", "init_manager_api", "__esmMin", "init_define_module", "init_define_process_env", "init_define_process_env_NODE_PATH", "require_manager", "__commonJSMin", "init_define_module", "init_define_process_env", "init_define_process_env_NODE_PATH", "init_manager_api", "addons", "name", "type", "newName", "init_define_module", "init_define_process_env", "init_define_process_env_NODE_PATH", "import_manager"]
}
